
% -*- mode: noweb; noweb-default-code-mode: R-mode; -*-
\documentclass[nojss]{jss}
\usepackage{dsfont}
\usepackage{bbm}
\usepackage{amsfonts}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amssymb}
\usepackage{yfonts}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% declarations for jss.cls %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% just as usual
\author{Robin K. S. Hankin\\Auckland University of Technology}
\title{Noncommutative and nonassociative three velocity in special relativity: introducing the \pkg{gyrogroup} package}


%\VignetteIndexEntry{The gyrogroup package}

%% for pretty printing and a nice hypersummary also set:
\Plainauthor{Robin K. S. Hankin}
\Plaintitle{The gyrogroup package}
\Shorttitle{The gyrogroup package}

%% an abstract and keywords
\Abstract{

Here I present the \pkg{gyrogroup} package for generalized
Bradley-Terry models and give examples from two competetive
situations: single scull rowing, and the competitive cooking game show
MasterChef Australia.  A number of natural statistical hypotheses may
be tested straightforwardly using the software.
}


\Keywords{gyrogroup, gyromorphism, gyrocommutative, gyroassociative,
  Thomas precession, Thomas gyration, Lorentz law, Lorentz velocity
  addition, special relativity, relativistic physics, Einstein
  velocity addition, Einstein velocity addition law, addition law,
  parallelogra law, three-velocity, three-vector, nonassociative,
  noncommutative, \proglang{R}}

\Plainkeywords{gyrogroup, gyromorphism, gyrocommutative, gyroassociative,
  Thomas precession, Thomas gyration, Lorentz law, Lorentz velocity
  addition, special relativity, relativistic physics, Einstein
  velocity addition, Einstein velocity addition law, addition law,
  parallelogra law, three-velocity, three-vector, nonassociative,
  noncommutative, R}  
  
  
%% publication information
%% NOTE: This needs to filled out ONLY IF THE PAPER WAS ACCEPTED.
%% If it was not (yet) accepted, leave them commented.
%% \Volume{13}
%% \Issue{9}
%% \Month{September}
%% \Year{2004}
%% \Submitdate{2004-09-29}
%% \Acceptdate{2004-09-29}

%% The address of (at least) one author should be given
%% in the following format:
\Address{
  Robin K. S. Hankin\\
  Auckland University of Technology\\
  E-mail: \email{hankin.robin@gmail.com}
}
%% It is also possible to add a telephone and fax number
%% before the e-mail in the following format:
%% Telephone: +43/1/31336-5053
%% Fax: +43/1/31336-734

%% for those who use Sweave please include the following line (with % symbols):
%% need no \usepackage{Sweave.sty}

%% end of declarations %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\newcommand{\bu}{\mathbf u}
\newcommand{\bv}{\mathbf v}
\newcommand{\bw}{\mathbf w}
\newcommand{\bx}{\mathbf x}
\newcommand{\by}{\mathbf y}

\newcommand{\gyr}[2]{\operatorname{gyr}\left[{\mathbf #1},{\mathbf #2}\right]}

\SweaveOpts{}
\begin{document}
\section{Introduction}


<<echo=FALSE,print=FALSE>>=
ignore <- require(magrittr,quietly=TRUE)
@ 

\section{Introduction}

``The nonassociativity of Einstein's velocity addition is not widely
known''~\citep{ungar2006}.

In this short vignette I will introduce the \pkg{gyrogroup} package which gives
functionality for manipulating three-velocities in the context of their being a gyrogroup.

\section{The package in use}

\cite{ungar2006} shows that the velocity addition law is

\begin{equation}
\bu\oplus\bv=
\frac{1}{1+\bu\cdot\bv}
\left\{
\bu + \frac{\bv}{\gamma_\bu} + \frac{\gamma_\bu
\left(\bu\cdot\bv\right)\bu}{1+\gamma_\bu}
\right\}
\end{equation}
   
where~$\gamma_\bu=\left(1-\bu\cdot\bu\right)^{-1/2}$ and we are
assuming~$c=1$.  Ungar shows that, in general,
$\bu\oplus\bv\neq\bv\oplus\bu$
and~$(\bu\oplus\bv)\oplus\bw\neq\bu\oplus(\bv\oplus\bw)$.  He also
defines the binary operator~$\ominus$
as~$\bu\ominus\bv=\bu\oplus\left(-\bv\right)$ (and implicitly
defines~$\ominus\bu\oplus\bv$ to be~$\left(-\bu\right)\oplus\bv$).

If we have

\begin{equation}
\gyr{u}{v}\bx=-\left(\bu\oplus\bv\right)\oplus\left(\bu\oplus\left(\bv\oplus\bx\right)\right)
\end{equation}

Then Ungar shows that 

\begin{eqnarray}
\bu\oplus\bv &=& \gyr{u}{v}\left(\bv\oplus\bu\right)\label{noncom}\\
\gyr{u}{v}\bx\cdot\gyr{u}{v}\by &=& \bx\cdot\by\label{doteq}\\
\gyr{u}{v}\left(\bx\oplus\by\right) &=& \gyr{u}{v}\bx\oplus\gyr{u}{v}\by\\
\left(\gyr{u}{v}\right)^{-1} &=& \left(\gyr{v}{u}\right)\label{gyrinv}\\
\bu\oplus\left(\bv\oplus\bw\right) &=&\left(\bu\oplus\bv\right)\oplus\gyr{u}{v}\bw\label{nonass1}\\
\left(\bu\oplus\bv\right)\oplus\bw &=&\bu\oplus\left(\bv\oplus\gyr{v}{u}\bw\right)\label{nonass2}
\end{eqnarray}

Consider the following R session:

<<kickoff>>=
library(gyrogroup)
u <- as.3vel(c(-0.7,+0.2,-0.3))
v <- as.3vel(c(+0.3,+0.3,+0.4))
w <- as.3vel(c(+0.1,+0.3,+0.8))
x <- as.3vel(c(-0.2,-0.1,-0.9))
u
@ 

Here we have three-vectors \code{u} etc.  We can see that \code{u} and
\code{v} do not commute:

<<try>>=
u+v
v+u
@ 

(the results differ).  We can use equation~\ref{noncom}
<<>>=
(u+v)-gyr(u,v,v+u)
@ 

showing agreement to within numerical error.  It is also possible to
use the functional idiom:

<<funcid>>=
f <- gyrfun(u,v)
(u+v)-f(v+u)    # should be zero
@ 

Function \code{gyrfun()} is vectorized, which means that it plays
nicely with (R) vectors.  Consider

<<vec9>>=
u9 <- r3vel(9)
u9
@ 

Then we can create a vectorized gyrofunction:

<<vecfun>>=
f <- gyrfun(u9,v)
f(x)
@ 


Note that the package vectorization is transparent when using syntatic sugar:

<<u9+x>>=
u9+x
@ 

(here, the addition operates using R's standard recycling rules).

\subsection{Associativity}


Three velocity addition is not associative:

<<nonass>>=
(u+v)+w
u+(v+w)
@ 

But we can use equations~\ref{nonass1} and~\ref{nonass2}:

<<nonass1>>=
(u+(v+w)) - ((u+v)+gyr(u,v,w))
((u+v)+w) - (u+(v+gyr(v,u,w)))
@ 

\clearpage
\section{Visualization}

Consider the following three-velocities:

<<viss>>=
u <- as.3vel(c(0, 0.8, 0))
v <- r3vel(500,0.9)
w <- as.3vel(c(0.7, 0, -0.7))
@ 

Object~$\bv$ is 500 randomly chosen three velocities with a magnitude
of~0.9 (Figure~\ref{v}).  We can see the noncommutativity of three
velocity addition in figures~\ref{uvvu} and~\ref{uvredblack}, and the
nonassociativity in figures~\ref{assocplotter1}
and~\ref{assocplotter2}.

\begin{figure}[htbp]
  \begin{center}
<<uplotter, fig=TRUE>>=
pairs(v,asp=1,cex=0.5,xlim=c(-1,1),ylim=c(-1,1))
@
\caption{Three dimensional plot of 500 random three
  velocities \label{v} with magnitude 0.9}
  \end{center}
\end{figure}

\begin{figure}[htbp]
  \begin{center}
<<uvvuplotter, fig=TRUE>>=
pairs((u+v)-(v+u),asp=1,cex=0.5,xlim=c(-1,1),ylim=c(-1,1))
@
\caption{Three \label{uvvu} dimensional plot of $\left(\bu+\bv\right)-\left(\bv+\bu\right)$}
  \end{center}
\end{figure}

\begin{figure}[htbp]
  \begin{center}
<<uvredblackplotter, fig=TRUE>>=
jj <- rbind(u+v,v+u)
pairs(jj,asp=1,xlim=c(-1,1),cex=0.5,ylim=c(-1,1),col=c(rep("black",500),rep("red",500)))
@
\caption{Three \label{uvredblack} dimensional plot of $\left(\bu+\bv\right)$ in black and~$\left(\bv+\bu\right)$ in red}
  \end{center}
\end{figure}



\begin{figure}[htbp]
  \begin{center}
<<assocplotter1, fig=TRUE>>=
pairs( (u+(v+w))-((u+v)+w),asp=1,cex=0.5,xlim=c(-1,1),ylim=c(-1,1))
@
\caption{Three \label{assocplotter1} dimensional plot of
  $\left(\bu+\left(\bv+\bw\right)\right)-\left(\left(\bu+\bv\right)+\bw\right)$}
  \end{center}
\end{figure}

\begin{figure}[htbp]
  \begin{center}
<<assocredblackplotter, fig=TRUE>>=
jj <- rbind(u+(v+w),(u+v)+w)
pairs(jj,asp=1,cex=0.5,xlim=c(-1,1),ylim=c(-1,1),col=c(rep("black",500),rep("red",500)))
@
\caption{Three \label{assocplotter2} dimensional plot
  of~$\bu+\left(\bv+\bw\right)$ in black and~$\left(\bu+\bv\right)+\bw$
  in red}
  \end{center}
\end{figure}

\newpage
\section{The magrittr package: pipes}

The gyrogroup package works nicely with magrittr.  If we define
<<defuvw>>=
 u <- as.3vel(c(+0.5,0.1,-0.2))
 v <- as.3vel(c(+0.4,0.3,-0.2))
 w <- as.3vel(c(-0.3,0.2,+0.2))
@ 

Then pipe notation operates as expected:


<<>>=
rbind(u %>% add(v)  ,  u+v)
@ 

Demonstrating associativity is a little harder:

<<>>=
rbind(u %>% add(v) %>% add(w)  ,  (u+v)+w)
@ 


and 

<<>>=
rbind(u %>% add(v %>% add(w))  ,  u+(v+w))
@ 


\newpage
\section{Functional notation}


It is possible to replace calls like \code{gyr(u,v,x)} with functional notation which can make for arguably more natural R idiom.  If we have 

<<funcnot>>=
u <- as.3vel(c(0, 0.8, 0))
v <- r3vel(5,0.9)
x <- as.3vel(c(0.7, 0, -0.7))
y <- as.3vel(c(0.1, 0.3, -0.6))
@ 

Then we can define \code{f()} which is the map~$\bx\longrightarrow\gyr{u}{v}\bx$.


<<>>=
f <- gyrfun(u,v)
f(w)
@ 

Then numerical verification of equation~\ref{doteq} and~\ref{gyrinv} is straightforward:e

<<>>=
prod3(f(x),f(y)) - prod3(x,y)
@ 

and

<<>>=
f <- gyrfun(u,v)
g <- gyrfun(v,u)
f(g(x)) - g(f(x))
@ 


And it is possible to use pipes together with the functional notation:

<<>>=
x %<>% f  %>% add(y)  # x <- f(x)+y
@ 

\bibliography{gyrogroup}
\end{document}
 
